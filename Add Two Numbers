/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        
        var head = new ListNode(-1);
        var tail = head;
        
        var carry = 0;
        
        while (l1 != null && l2 != null)
        {
            carry += l1.val;
            carry += l2.val;
            
            tail.next = new ListNode(carry % 10);
            carry = carry / 10;

            tail = tail.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        
        if (l1 == null && l2 == null)
        {
            if (carry > 0)
            {
                tail.next = new ListNode(carry);
            }
            
            return head.next;
        }
        
        if (l1 == null)
        {
            l1 = l2;
        }
        
        while (l1 != null)
        {
            carry += l1.val;            
            tail.next = new ListNode(carry % 10);
            carry /= 10;
            tail = tail.next;
            l1 = l1.next;
        }
        
        if (carry > 0)
        {
            tail.next = new ListNode(carry);
        }
        
        return head.next;
    }
}
