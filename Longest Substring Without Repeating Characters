public class Solution 
{
    public int LengthOfLongestSubstring(string s) 
    {
        int[] charfrequency = new int[256];
        for(int i = 0 ; i< charfrequency.Length;i++)
        {
            charfrequency[i] = -1;
        }
        int slen = -1;
        int maxlen = 0;
        for(int i = 0 ; i< s.Length;i++)
        {
            if(charfrequency[s[i]] > slen)
                slen = charfrequency[s[i]];
            charfrequency[s[i]] = i;
            maxlen = max(maxlen,i-slen);  
        }
        return maxlen;
    }

    private int max(int a, int b)
    {
        return a>b? a:b;
    }
}
Solution 2: Incase encoding standard is not mentioned
public class Solution {
    public int LengthOfLongestSubstring(string s) {
        int maxlen = 0;
        Dictionary<char,int> map = new Dictionary<char,int>();
        for(int i = 0,j=-1; i< s.Length;i++){
            if(map.ContainsKey(s[i])){
                j = Math.Max(map[s[i]],j);
            }
            map[s[i]] = i;
            maxlen = Math.Max(maxlen,i-j);
        }
        return maxlen;
    }
}
